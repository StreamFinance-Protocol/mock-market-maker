"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const constants_1 = require("../constants");
const rest_1 = __importDefault(require("./rest"));
/**
 * @description REST endpoints for data related to a particular address.
 */
class AccountClient extends rest_1.default {
    async getSubaccounts(address, limit) {
        const uri = `/v4/addresses/${address}`;
        return this.get(uri, { limit });
    }
    async getSubaccount(address, subaccountNumber) {
        const uri = `/v4/addresses/${address}/subaccountNumber/${subaccountNumber}`;
        return this.get(uri);
    }
    async getSubaccountPerpetualPositions(address, subaccountNumber, status, limit, createdBeforeOrAtHeight, createdBeforeOrAt) {
        const uri = '/v4/perpetualPositions';
        return this.get(uri, {
            address,
            subaccountNumber,
            status,
            limit,
            createdBeforeOrAtHeight,
            createdBeforeOrAt,
        });
    }
    async getSubaccountAssetPositions(address, subaccountNumber, status, limit, createdBeforeOrAtHeight, createdBeforeOrAt) {
        const uri = '/v4/assetPositions';
        return this.get(uri, {
            address,
            subaccountNumber,
            status,
            limit,
            createdBeforeOrAtHeight,
            createdBeforeOrAt,
        });
    }
    async getSubaccountTransfers(address, subaccountNumber, limit, createdBeforeOrAtHeight, createdBeforeOrAt, page) {
        const uri = '/v4/transfers';
        return this.get(uri, {
            address,
            subaccountNumber,
            limit,
            createdBeforeOrAtHeight,
            createdBeforeOrAt,
            page,
        });
    }
    async getParentSubaccountNumberTransfers(address, parentSubaccountNumber, limit, createdBeforeOrAtHeight, createdBeforeOrAt, page) {
        const uri = '/v4/transfers/parentSubaccountNumber';
        return this.get(uri, {
            address,
            parentSubaccountNumber,
            limit,
            createdBeforeOrAtHeight,
            createdBeforeOrAt,
            page,
        });
    }
    async getSubaccountOrders(address, subaccountNumber, ticker, tickerType = constants_1.TickerType.PERPETUAL, side, status, type, limit, goodTilBlockBeforeOrAt, goodTilBlockTimeBeforeOrAt, returnLatestOrders) {
        const uri = '/v4/orders';
        return this.get(uri, {
            address,
            subaccountNumber,
            ticker,
            tickerType,
            side,
            status,
            type,
            limit,
            goodTilBlockBeforeOrAt,
            goodTilBlockTimeBeforeOrAt,
            returnLatestOrders,
        });
    }
    async getOrder(orderId) {
        const uri = `/v4/orders/${orderId}`;
        return this.get(uri);
    }
    async getSubaccountFills(address, subaccountNumber, ticker, tickerType = constants_1.TickerType.PERPETUAL, limit, createdBeforeOrAtHeight, createdBeforeOrAt, page) {
        const uri = '/v4/fills';
        return this.get(uri, {
            address,
            subaccountNumber,
            ticker,
            tickerType,
            limit,
            createdBeforeOrAtHeight,
            createdBeforeOrAt,
            page,
        });
    }
    async getParentSubaccountNumberFills(address, parentSubaccountNumber, ticker, tickerType = constants_1.TickerType.PERPETUAL, limit, createdBeforeOrAtHeight, createdBeforeOrAt, page) {
        const uri = '/v4/fills/parentSubaccountNumber';
        return this.get(uri, {
            address,
            parentSubaccountNumber,
            ticker,
            tickerType,
            limit,
            createdBeforeOrAtHeight,
            createdBeforeOrAt,
            page,
        });
    }
    async getSubaccountHistoricalPNLs(address, subaccountNumber, createdBeforeOrAtHeight, createdBeforeOrAt, createdOnOrAfterHeight, createdOnOrAfter, limit, page) {
        const uri = '/v4/historical-pnl';
        return this.get(uri, {
            address,
            subaccountNumber,
            createdBeforeOrAtHeight,
            createdBeforeOrAt,
            createdOnOrAfterHeight,
            createdOnOrAfter,
            limit,
            page,
        });
    }
    async getTransfersBetween(sourceAddress, sourceSubaccountNumber, recipientAddress, recipientSubaccountNumber, createdBeforeOrAtHeight, createdBeforeOrAt) {
        const uri = '/v4/transfers/between';
        return this.get(uri, {
            sourceAddress,
            sourceSubaccountNumber,
            recipientAddress,
            recipientSubaccountNumber,
            createdBeforeOrAtHeight,
            createdBeforeOrAt,
        });
    }
}
exports.default = AccountClient;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3VudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jbGllbnRzL21vZHVsZXMvYWNjb3VudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLDRDQUE2RjtBQUU3RixrREFBZ0M7QUFFaEM7O0dBRUc7QUFDSCxNQUFxQixhQUFjLFNBQVEsY0FBVTtJQUNuRCxLQUFLLENBQUMsY0FBYyxDQUFDLE9BQWUsRUFBRSxLQUFjO1FBQ2xELE1BQU0sR0FBRyxHQUFHLGlCQUFpQixPQUFPLEVBQUUsQ0FBQztRQUN2QyxPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBRUQsS0FBSyxDQUFDLGFBQWEsQ0FBQyxPQUFlLEVBQUUsZ0JBQXdCO1FBQzNELE1BQU0sR0FBRyxHQUFHLGlCQUFpQixPQUFPLHFCQUFxQixnQkFBZ0IsRUFBRSxDQUFDO1FBQzVFLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN2QixDQUFDO0lBRUQsS0FBSyxDQUFDLCtCQUErQixDQUNuQyxPQUFlLEVBQ2YsZ0JBQXdCLEVBQ3hCLE1BQThCLEVBQzlCLEtBQXFCLEVBQ3JCLHVCQUF1QyxFQUN2QyxpQkFBaUM7UUFFakMsTUFBTSxHQUFHLEdBQUcsd0JBQXdCLENBQUM7UUFDckMsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRTtZQUNuQixPQUFPO1lBQ1AsZ0JBQWdCO1lBQ2hCLE1BQU07WUFDTixLQUFLO1lBQ0wsdUJBQXVCO1lBQ3ZCLGlCQUFpQjtTQUNsQixDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsS0FBSyxDQUFDLDJCQUEyQixDQUMvQixPQUFlLEVBQ2YsZ0JBQXdCLEVBQ3hCLE1BQThCLEVBQzlCLEtBQXFCLEVBQ3JCLHVCQUF1QyxFQUN2QyxpQkFBaUM7UUFFakMsTUFBTSxHQUFHLEdBQUcsb0JBQW9C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